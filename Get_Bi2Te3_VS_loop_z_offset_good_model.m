function model = Get_Bi2Te3_VS_loop_z_offset_good_model(lam_range)
%
% Bi2Te3_VS_loop_z_offset_good.m
%
% Model exported on Jul 22 2019, 13:46 by COMSOL 5.4.0.388.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('C:\Users\Vassili Savinov\Dropbox\Giorgio_Mult');

model.label('Bi2Te3_VS_loop.mph');

model.param.set('landa', '7.15E-6[m]');
model.param.set('flanda', 'c_const/landa');
model.param.set('NOunit', '1[1/m]');
model.param.set('wedge_l', '4.6e-6[m]');
model.param.set('u_cell', '6.55e-6');
model.param.set('w_slit', '9e-7');
model.param.set('dom_length', '2.5*u_cell');
model.param.set('mesh_max', '1e-6[m]');
model.param.set('landa0', '1e-6[m]');
model.param.set('flanda0', 'c_const/landa0');
model.param.set('landa1', '6*landa0');
model.param.set('flanda1', 'c_const/landa1');
model.param.set('fase', '0 [deg]');
model.param.set('mesh_a', '0.5e-6 [m]');
model.param.set('mesh_b', '0.1e-6 [m]');
model.param.set('mesh_c', '0.3e-6 [m]');
model.param.set('mesh_d', '0.8e-6 [m]');
model.param.set('z_offset', '0.75*wedge_l/2', 'offest of the geometry along the z-axis');

model.component.create('comp1', false);

model.component('comp1').geom.create('geom1', 3);

model.result.table.create('tbl1', 'Table');
model.result.table.create('tbl2', 'Table');

model.func.create('int1', 'Interpolation');
model.func.create('int2', 'Interpolation');
model.func('int1').set('funcs', {'n_Bi2Te3_midIR' '1'});
model.func('int1').set('source', 'file');
model.func('int1').set('filename', 'C:\Users\Vassili Savinov\Dropbox\Giorgio_Mult\n_Bi2Te3_midIR.txt');
model.func('int1').set('interp', 'piecewisecubic');
model.func('int1').set('extrap', 'linear');
model.func('int1').set('argunit', 'm');
model.func('int1').set('fununit', '1');
model.func('int2').set('funcs', {'k_Bi2Te3_midIR' '1'});
model.func('int2').set('source', 'file');
model.func('int2').set('filename', 'C:\Users\Vassili Savinov\Dropbox\Giorgio_Mult\k_Bi2Te3_midIR.txt');
model.func('int2').set('interp', 'piecewisecubic');
model.func('int2').set('extrap', 'linear');
model.func('int2').set('argunit', 'm');
model.func('int2').set('fununit', '1');

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').geomRep('comsol');
model.component('comp1').geom('geom1').repairTolType('relative');
model.component('comp1').geom('geom1').create('blk1', 'Block');
model.component('comp1').geom('geom1').feature('blk1').set('pos', {'0' '0' '0.0*dom_length'});
model.component('comp1').geom('geom1').feature('blk1').set('base', 'center');
model.component('comp1').geom('geom1').feature('blk1').set('size', {'u_cell' 'u_cell' 'dom_length'});
model.component('comp1').geom('geom1').create('blk2', 'Block');
model.component('comp1').geom('geom1').feature('blk2').set('pos', {'0' 'u_cell/2' '0.0*dom_length'});
model.component('comp1').geom('geom1').feature('blk2').set('base', 'center');
model.component('comp1').geom('geom1').feature('blk2').set('size', {'u_cell' 'u_cell' 'dom_length'});
model.component('comp1').geom('geom1').create('int2', 'Intersection');
model.component('comp1').geom('geom1').feature('int2').selection('input').set({'blk1' 'blk2'});
model.component('comp1').geom('geom1').create('wp1', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp1').set('unite', true);
model.component('comp1').geom('geom1').feature('wp1').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r1').set('pos', {'-u_cell/2' '0'});
model.component('comp1').geom('geom1').feature('wp1').geom.feature('r1').set('size', {'u_cell' 'u_cell/2'});
model.component('comp1').geom('geom1').create('wp2', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp2').set('unite', true);
model.component('comp1').geom('geom1').feature('wp2').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('r1').set('base', 'center');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('r1').set('size', {'wedge_l' 'w_slit'});
model.component('comp1').geom('geom1').feature('wp2').geom.create('fil1', 'Fillet');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('fil1').set('radius', 'w_slit/8');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('fil1').selection('point').set('r1(1)', [1 2 3 4]);
model.component('comp1').geom('geom1').feature('wp2').geom.create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('r2').set('pos', {'-u_cell/2' '0'});
model.component('comp1').geom('geom1').feature('wp2').geom.feature('r2').set('size', {'u_cell' 'u_cell/2'});
model.component('comp1').geom('geom1').feature('wp2').geom.create('int1', 'Intersection');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('int1').selection('input').set({'fil1' 'r2'});
model.component('comp1').geom('geom1').create('ext1', 'Extrude');
model.component('comp1').geom('geom1').feature('ext1').setIndex('distance', '0.75*wedge_l', 0);
model.component('comp1').geom('geom1').feature('ext1').set('reverse', true);
model.component('comp1').geom('geom1').feature('ext1').setIndex('displ', '0', 0, 0);
model.component('comp1').geom('geom1').feature('ext1').setIndex('displ', '-0.4*w_slit', 0, 1);
model.component('comp1').geom('geom1').feature('ext1').selection('input').set({'wp2'});
model.component('comp1').geom('geom1').create('co1', 'Compose');
model.component('comp1').geom('geom1').feature('co1').set('formula', 'int2+int2*ext1');
model.component('comp1').geom('geom1').create('int3', 'Intersection');
model.component('comp1').geom('geom1').feature('int3').selection('input').set({'co1'});
model.component('comp1').geom('geom1').create('wp5', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp5').active(false);
model.component('comp1').geom('geom1').feature('wp5').set('unite', true);
model.component('comp1').geom('geom1').feature('wp5').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('r1').set('base', 'center');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('r1').set('size', {'wedge_l' 'w_slit'});
model.component('comp1').geom('geom1').feature('wp5').geom.create('fil1', 'Fillet');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('fil1').set('radius', 'w_slit/2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('fil1').selection('point').set('r1(1)', [1 2 3 4]);
model.component('comp1').geom('geom1').create('ext2', 'Extrude');
model.component('comp1').geom('geom1').feature('ext2').active(false);
model.component('comp1').geom('geom1').feature('ext2').setIndex('distance', '-1*wedge_l', 0);
model.component('comp1').geom('geom1').feature('ext2').setIndex('displ', '0', 0, 0);
model.component('comp1').geom('geom1').feature('ext2').setIndex('displ', '0.25*w_slit', 0, 1);
model.component('comp1').geom('geom1').feature('ext2').selection('input').set({'wp5'});
model.component('comp1').geom('geom1').create('int1', 'Intersection');
model.component('comp1').geom('geom1').feature('int1').active(false);
model.component('comp1').geom('geom1').feature('int1').selection('input').set({'ext2'});
model.component('comp1').geom('geom1').create('wp3', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp3').set('quickz', 'dom_length/2+0.0*dom_length-0.2*dom_length');
model.component('comp1').geom('geom1').feature('wp3').set('unite', true);
model.component('comp1').geom('geom1').feature('wp3').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp3').geom.feature('r1').set('pos', {'-u_cell/2' '0'});
model.component('comp1').geom('geom1').feature('wp3').geom.feature('r1').set('size', {'u_cell' 'u_cell/2'});
model.component('comp1').geom('geom1').create('wp4', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', '-dom_length/2+0.0*dom_length+0.2*dom_length');
model.component('comp1').geom('geom1').feature('wp4').set('unite', true);
model.component('comp1').geom('geom1').feature('wp4').geom.create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('r1').set('pos', {'-u_cell/2' '0'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('r1').set('size', {'u_cell' 'u_cell/2'});
model.component('comp1').geom('geom1').create('mov1', 'Move');
model.component('comp1').geom('geom1').feature('mov1').set('displz', 'z_offset');
model.component('comp1').geom('geom1').feature('mov1').selection('input').set({'int3' 'wp1' 'wp3' 'wp4'});
model.component('comp1').geom('geom1').feature('fin').set('repairtoltype', 'relative');
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').selection.create('emw_dst_pc1', 'Explicit');
model.component('comp1').selection('emw_dst_pc1').geom('geom1', 2);
model.component('comp1').selection('emw_dst_pc1').set([26 27 28 29]);
model.component('comp1').selection.create('emw_dst_pc2', 'Explicit');
model.component('comp1').selection('emw_dst_pc2').geom('geom1', 2);
model.component('comp1').selection('emw_dst_pc2').set([14 15 16 17]);

model.component('comp1').view('view6').tag('view61');
model.component('comp1').view('view4').tag('view6');
model.component('comp1').view('view5').tag('view4');
model.component('comp1').view('view61').tag('view5');
model.view.create('view7', 2);
model.view.create('view8', 2);

model.component('comp1').coordSystem.create('pml1', 'PML');
model.component('comp1').coordSystem.create('pml2', 'PML');
model.component('comp1').coordSystem('pml1').selection.set([4]);
model.component('comp1').coordSystem('pml2').selection.set([1]);

model.component('comp1').physics.create('emw', 'ElectromagneticWaves', 'geom1');
model.component('comp1').physics('emw').create('wee2', 'WaveEquationElectric', 3);
model.component('comp1').physics('emw').feature('wee2').selection.set([1 2]);
model.component('comp1').physics('emw').create('wee3', 'WaveEquationElectric', 3);
model.component('comp1').physics('emw').feature('wee3').selection.set([1 2]);
model.component('comp1').physics('emw').create('wee4', 'WaveEquationElectric', 3);
model.component('comp1').physics('emw').feature('wee4').selection.set([1 2]);
model.component('comp1').physics('emw').create('wee5', 'WaveEquationElectric', 3);
model.component('comp1').physics('emw').feature('wee5').selection.set([1 2]);
model.component('comp1').physics('emw').create('wee6', 'WaveEquationElectric', 3);
model.component('comp1').physics('emw').feature('wee6').selection.set([1 2]);
model.component('comp1').physics('emw').create('wee7', 'WaveEquationElectric', 3);
model.component('comp1').physics('emw').feature('wee7').selection.set([1 2]);
model.component('comp1').physics('emw').create('port1', 'Port', 2);
model.component('comp1').physics('emw').feature('port1').selection.set([12]);
model.component('comp1').physics('emw').feature('port1').create('pportp1', 'PeriodicPortReferencePoint', 0);
model.component('comp1').physics('emw').feature('port1').feature('pportp1').selection.set([2 3 6 7 8 9 10 12 16 18 21 23 24 25 27 28 29 30 32]);
model.component('comp1').physics('emw').feature('port1').create('dport1', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port1').create('dport2', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port1').create('dport3', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port1').create('dport4', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port1').create('dport5', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port1').create('dport6', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port1').create('dport7', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port1').create('dport8', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').create('port2', 'Port', 2);
model.component('comp1').physics('emw').feature('port2').selection.set([6]);
model.component('comp1').physics('emw').feature('port2').create('pportp1', 'PeriodicPortReferencePoint', 0);
model.component('comp1').physics('emw').feature('port2').feature('pportp1').selection.set([3 4 6 8 9 10 12 16 18 21 23 24 25 26 27 28 30 31 32]);
model.component('comp1').physics('emw').feature('port2').create('dport171', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport172', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport173', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport174', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport175', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport176', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport177', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport178', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport179', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport180', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport181', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport182', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport183', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport184', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport185', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport186', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport187', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport188', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport189', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport190', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport191', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport192', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport193', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport194', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport195', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport196', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport197', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').feature('port2').create('dport198', 'DiffractionOrder', 2);
model.component('comp1').physics('emw').create('pc1', 'PeriodicCondition', 2);
model.component('comp1').physics('emw').feature('pc1').selection.set([26 27 28 29]);
model.component('comp1').physics('emw').create('pc2', 'PeriodicCondition', 2);
model.component('comp1').physics('emw').feature('pc2').selection.set([14 15 16 17]);
model.component('comp1').physics('emw').create('pec2', 'PerfectElectricConductor', 2);
model.component('comp1').physics('emw').feature('pec2').selection.set([2 5 8 11 14 15 16 17 19]);
model.component('comp1').physics('emw').create('pmc1', 'PerfectMagneticConductor', 2);
model.component('comp1').physics('emw').feature('pmc1').selection.set([1 4 7 10 26 27 28 29]);

model.component('comp1').mesh('mesh1').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh1').create('cpf1', 'CopyFace');
model.component('comp1').mesh('mesh1').create('ftri2', 'FreeTri');
model.component('comp1').mesh('mesh1').create('edg1', 'Edge');
model.component('comp1').mesh('mesh1').create('ftri3', 'FreeTri');
model.component('comp1').mesh('mesh1').create('ftet1', 'FreeTet');
model.component('comp1').mesh('mesh1').create('ftri4', 'FreeTri');
model.component('comp1').mesh('mesh1').create('cpf2', 'CopyFace');
model.component('comp1').mesh('mesh1').create('ftet2', 'FreeTet');
model.component('comp1').mesh('mesh1').create('swe1', 'Sweep');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([27]);
model.component('comp1').mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftri2').selection.set([15]);
model.component('comp1').mesh('mesh1').feature('ftri2').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').selection.geom('geom1');
model.component('comp1').mesh('mesh1').feature('edg1').selection.set([9 24 25 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42]);
model.component('comp1').mesh('mesh1').feature('edg1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftri3').selection.set([5 19]);
model.component('comp1').mesh('mesh1').feature('ftri3').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftet1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh1').feature('ftet1').selection.set([2 5]);
model.component('comp1').mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftri4').selection.set([28]);
model.component('comp1').mesh('mesh1').feature('ftri4').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftet2').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh1').feature('ftet2').selection.set([3]);
model.component('comp1').mesh('mesh1').feature('ftet2').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('swe1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh1').feature('swe1').selection.set([1 4]);
model.component('comp1').mesh('mesh1').feature('swe1').create('size1', 'Size');

model.result.table('tbl1').comments('Global Evaluation 3 (abs(emw.S11)^2)');
model.result.table('tbl2').comments('Line Average 1 ()');

model.capeopen.label('Thermodynamics Package');

model.component('comp1').view('view1').set('renderwireframe', true);
model.component('comp1').view('view1').set('showgrid', false);
model.component('comp1').view('view1').set('scenelight', false);
model.component('comp1').view('view2').axis.set('xmin', -8.673287084093317E-6);
model.component('comp1').view('view2').axis.set('xmax', 8.673287084093317E-6);
model.component('comp1').view('view2').axis.set('ymin', -3.7087497730681207E-6);
model.component('comp1').view('view2').axis.set('ymax', 6.933749773452291E-6);
model.component('comp1').view('view3').axis.set('xmin', -5.820484147989191E-6);
model.component('comp1').view('view3').axis.set('xmax', 5.820484147989191E-6);
model.component('comp1').view('view3').axis.set('ymin', -1.933493649630691E-6);
model.component('comp1').view('view3').axis.set('ymax', 5.208493348618504E-6);
model.component('comp1').view('view4').label('View 4.1');
model.component('comp1').view('view4').axis.set('xmin', -1.6299341917037964);
model.component('comp1').view('view4').axis.set('xmax', 1.6299341917037964);
model.component('comp1').view('view5').label('View 5');
model.component('comp1').view('view6').label('View 6');
model.view('view7').axis.set('xmin', -3.602499873522902E-6);
model.view('view7').axis.set('xmax', 3.602499873522902E-6);
model.view('view7').axis.set('ymin', -8.943211469158996E-7);
model.view('view7').axis.set('ymax', 3.309209660073975E-6);
model.view('view8').axis.set('xmin', -3.602499873522902E-6);
model.view('view8').axis.set('xmax', 3.602499873522902E-6);
model.view('view8').axis.set('ymin', -7.075618668750394E-7);
model.view('view8').axis.set('ymax', 3.982561793236528E-6);

model.component('comp1').physics('emw').prop('BackgroundField').set('w0', '(2*pi)/emw.k0');
model.component('comp1').physics('emw').prop('AnalysisMethodology').set('MethodologyOptions', 'Robust');
model.component('comp1').physics('emw').feature('wee1').set('DisplacementFieldModel', 'RefractiveIndex');
model.component('comp1').physics('emw').feature('wee1').label('Wave Equation, Air');
model.component('comp1').physics('emw').feature('wee2').set('DisplacementFieldModel', 'RefractiveIndex');
model.component('comp1').physics('emw').feature('wee2').set('n', {'n_Bi2Te3_midIR(landa)'; '0'; '0'; '0'; 'n_Bi2Te3_midIR(landa)'; '0'; '0'; '0'; 'n_Bi2Te3_midIR(landa)'});
model.component('comp1').physics('emw').feature('wee2').set('ki', {'k_Bi2Te3_midIR(landa)'; '0'; '0'; '0'; 'k_Bi2Te3_midIR(landa)'; '0'; '0'; '0'; 'k_Bi2Te3_midIR(landa)'});
model.component('comp1').physics('emw').feature('wee2').label('Wave Equation, Bi2Te3');
model.component('comp1').physics('emw').feature('wee3').set('DisplacementFieldModel', 'RefractiveIndex');
model.component('comp1').physics('emw').feature('wee3').set('n', [7.2; 0; 0; 0; 7.2; 0; 0; 0; 7.2]);
model.component('comp1').physics('emw').feature('wee3').active(false);
model.component('comp1').physics('emw').feature('wee3').label('Wave Equation, GeTe');
model.component('comp1').physics('emw').feature('wee4').set('DisplacementFieldModel', 'RefractiveIndex');
model.component('comp1').physics('emw').feature('wee4').set('n', [5.609; 0; 0; 0; 5.609; 0; 0; 0; 5.609]);
model.component('comp1').physics('emw').feature('wee4').active(false);
model.component('comp1').physics('emw').feature('wee4').label('Wave Equation, PbTe');
model.component('comp1').physics('emw').feature('wee5').set('DisplacementFieldModel', 'RefractiveIndex');
model.component('comp1').physics('emw').feature('wee5').set('n', [4.785; 0; 0; 0; 4.785; 0; 0; 0; 4.785]);
model.component('comp1').physics('emw').feature('wee5').active(false);
model.component('comp1').physics('emw').feature('wee5').label('Wave Equation, Te');
model.component('comp1').physics('emw').feature('wee6').set('DisplacementFieldModel', 'RefractiveIndex');
model.component('comp1').physics('emw').feature('wee6').set('n', [4.069; 0; 0; 0; 4.069; 0; 0; 0; 4.069]);
model.component('comp1').physics('emw').feature('wee6').active(false);
model.component('comp1').physics('emw').feature('wee6').label('Wave Equation, Ge');
model.component('comp1').physics('emw').feature('wee7').set('DisplacementFieldModel', 'RefractiveIndex');
model.component('comp1').physics('emw').feature('wee7').set('n', [3.437; 0; 0; 0; 3.437; 0; 0; 0; 3.437]);
model.component('comp1').physics('emw').feature('wee7').active(false);
model.component('comp1').physics('emw').feature('wee7').label('Wave Equation, c-Si');
model.component('comp1').physics('emw').feature('port1').set('PortSlit', true);
model.component('comp1').physics('emw').feature('port1').set('SlitType', 'DomainBacked');
model.component('comp1').physics('emw').feature('port1').set('PortOrientation', 'ReversePort');
model.component('comp1').physics('emw').feature('port1').set('beta', 'emw.k0');
model.component('comp1').physics('emw').feature('port1').set('E0', [0; 1; 0]);
model.component('comp1').physics('emw').feature('port1').set('Eampl', [0; 1; 0]);
model.component('comp1').physics('emw').feature('port1').set('fmax', 'flanda1');
model.component('comp1').physics('emw').feature('port1').feature('pportp1').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport1').set('PortName', '3');
model.component('comp1').physics('emw').feature('port1').feature('dport1').set('mOrder', -1);
model.component('comp1').physics('emw').feature('port1').feature('dport1').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport2').set('PortName', '4');
model.component('comp1').physics('emw').feature('port1').feature('dport2').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port1').feature('dport2').set('mOrder', -1);
model.component('comp1').physics('emw').feature('port1').feature('dport2').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport3').set('PortName', '5');
model.component('comp1').physics('emw').feature('port1').feature('dport3').set('nOrder', -1);
model.component('comp1').physics('emw').feature('port1').feature('dport3').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport4').set('PortName', '6');
model.component('comp1').physics('emw').feature('port1').feature('dport4').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port1').feature('dport4').set('nOrder', -1);
model.component('comp1').physics('emw').feature('port1').feature('dport4').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport5').set('PortName', '7');
model.component('comp1').physics('emw').feature('port1').feature('dport5').set('nOrder', 1);
model.component('comp1').physics('emw').feature('port1').feature('dport5').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport6').set('PortName', '8');
model.component('comp1').physics('emw').feature('port1').feature('dport6').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port1').feature('dport6').set('nOrder', 1);
model.component('comp1').physics('emw').feature('port1').feature('dport6').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport7').set('PortName', '9');
model.component('comp1').physics('emw').feature('port1').feature('dport7').set('mOrder', 1);
model.component('comp1').physics('emw').feature('port1').feature('dport7').active(false);
model.component('comp1').physics('emw').feature('port1').feature('dport8').set('PortName', '10');
model.component('comp1').physics('emw').feature('port1').feature('dport8').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port1').feature('dport8').set('mOrder', 1);
model.component('comp1').physics('emw').feature('port1').feature('dport8').active(false);
model.component('comp1').physics('emw').feature('port2').set('PortName', '2');
model.component('comp1').physics('emw').feature('port2').set('PortSlit', true);
model.component('comp1').physics('emw').feature('port2').set('SlitType', 'DomainBacked');
model.component('comp1').physics('emw').feature('port2').set('PortOrientation', 'ReversePort');
model.component('comp1').physics('emw').feature('port2').set('beta', 'n_Bi2Te3_midIR(landa)*emw.k0');
model.component('comp1').physics('emw').feature('port2').set('E0', [0; 1; 0]);
model.component('comp1').physics('emw').feature('port2').set('Eampl', [0; 1; 0]);
model.component('comp1').physics('emw').feature('port2').set('alpha2_inc', '-pi/2');
model.component('comp1').physics('emw').feature('port2').set('n', [4.069; 0; 0; 0; 4.069; 0; 0; 0; 4.069]);
model.component('comp1').physics('emw').feature('port2').set('fmax', 'flanda1');
model.component('comp1').physics('emw').feature('port2').feature('pportp1').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport171').set('PortName', '181');
model.component('comp1').physics('emw').feature('port2').feature('dport171').set('nOrder', -7);
model.component('comp1').physics('emw').feature('port2').feature('dport171').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport172').set('PortName', '182');
model.component('comp1').physics('emw').feature('port2').feature('dport172').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport172').set('nOrder', -7);
model.component('comp1').physics('emw').feature('port2').feature('dport172').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport173').set('PortName', '183');
model.component('comp1').physics('emw').feature('port2').feature('dport173').set('nOrder', -6);
model.component('comp1').physics('emw').feature('port2').feature('dport173').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport174').set('PortName', '184');
model.component('comp1').physics('emw').feature('port2').feature('dport174').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport174').set('nOrder', -6);
model.component('comp1').physics('emw').feature('port2').feature('dport174').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport175').set('PortName', '185');
model.component('comp1').physics('emw').feature('port2').feature('dport175').set('nOrder', -5);
model.component('comp1').physics('emw').feature('port2').feature('dport175').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport176').set('PortName', '186');
model.component('comp1').physics('emw').feature('port2').feature('dport176').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport176').set('nOrder', -5);
model.component('comp1').physics('emw').feature('port2').feature('dport176').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport177').set('PortName', '187');
model.component('comp1').physics('emw').feature('port2').feature('dport177').set('nOrder', -4);
model.component('comp1').physics('emw').feature('port2').feature('dport177').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport178').set('PortName', '188');
model.component('comp1').physics('emw').feature('port2').feature('dport178').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport178').set('nOrder', -4);
model.component('comp1').physics('emw').feature('port2').feature('dport178').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport179').set('PortName', '189');
model.component('comp1').physics('emw').feature('port2').feature('dport179').set('nOrder', -3);
model.component('comp1').physics('emw').feature('port2').feature('dport179').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport180').set('PortName', '190');
model.component('comp1').physics('emw').feature('port2').feature('dport180').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport180').set('nOrder', -3);
model.component('comp1').physics('emw').feature('port2').feature('dport180').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport181').set('PortName', '191');
model.component('comp1').physics('emw').feature('port2').feature('dport181').set('nOrder', -2);
model.component('comp1').physics('emw').feature('port2').feature('dport181').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport182').set('PortName', '192');
model.component('comp1').physics('emw').feature('port2').feature('dport182').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport182').set('nOrder', -2);
model.component('comp1').physics('emw').feature('port2').feature('dport182').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport183').set('PortName', '193');
model.component('comp1').physics('emw').feature('port2').feature('dport183').set('nOrder', -1);
model.component('comp1').physics('emw').feature('port2').feature('dport183').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport184').set('PortName', '194');
model.component('comp1').physics('emw').feature('port2').feature('dport184').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport184').set('nOrder', -1);
model.component('comp1').physics('emw').feature('port2').feature('dport184').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport185').set('PortName', '195');
model.component('comp1').physics('emw').feature('port2').feature('dport185').set('nOrder', 1);
model.component('comp1').physics('emw').feature('port2').feature('dport185').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport186').set('PortName', '196');
model.component('comp1').physics('emw').feature('port2').feature('dport186').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport186').set('nOrder', 1);
model.component('comp1').physics('emw').feature('port2').feature('dport186').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport187').set('PortName', '197');
model.component('comp1').physics('emw').feature('port2').feature('dport187').set('nOrder', 2);
model.component('comp1').physics('emw').feature('port2').feature('dport187').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport188').set('PortName', '198');
model.component('comp1').physics('emw').feature('port2').feature('dport188').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport188').set('nOrder', 2);
model.component('comp1').physics('emw').feature('port2').feature('dport188').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport189').set('PortName', '199');
model.component('comp1').physics('emw').feature('port2').feature('dport189').set('nOrder', 3);
model.component('comp1').physics('emw').feature('port2').feature('dport189').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport190').set('PortName', '200');
model.component('comp1').physics('emw').feature('port2').feature('dport190').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport190').set('nOrder', 3);
model.component('comp1').physics('emw').feature('port2').feature('dport190').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport191').set('PortName', '201');
model.component('comp1').physics('emw').feature('port2').feature('dport191').set('nOrder', 4);
model.component('comp1').physics('emw').feature('port2').feature('dport191').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport192').set('PortName', '202');
model.component('comp1').physics('emw').feature('port2').feature('dport192').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport192').set('nOrder', 4);
model.component('comp1').physics('emw').feature('port2').feature('dport192').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport193').set('PortName', '203');
model.component('comp1').physics('emw').feature('port2').feature('dport193').set('nOrder', 5);
model.component('comp1').physics('emw').feature('port2').feature('dport193').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport194').set('PortName', '204');
model.component('comp1').physics('emw').feature('port2').feature('dport194').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport194').set('nOrder', 5);
model.component('comp1').physics('emw').feature('port2').feature('dport194').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport195').set('PortName', '205');
model.component('comp1').physics('emw').feature('port2').feature('dport195').set('nOrder', 6);
model.component('comp1').physics('emw').feature('port2').feature('dport195').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport196').set('PortName', '206');
model.component('comp1').physics('emw').feature('port2').feature('dport196').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport196').set('nOrder', 6);
model.component('comp1').physics('emw').feature('port2').feature('dport196').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport197').set('PortName', '207');
model.component('comp1').physics('emw').feature('port2').feature('dport197').set('nOrder', 7);
model.component('comp1').physics('emw').feature('port2').feature('dport197').active(false);
model.component('comp1').physics('emw').feature('port2').feature('dport198').set('PortName', '208');
model.component('comp1').physics('emw').feature('port2').feature('dport198').set('components', 'outofplane');
model.component('comp1').physics('emw').feature('port2').feature('dport198').set('nOrder', 7);
model.component('comp1').physics('emw').feature('port2').feature('dport198').active(false);
model.component('comp1').physics('emw').feature('pc1').set('Floquet_source', 'FromPeriodicPort');
model.component('comp1').physics('emw').feature('pc1').active(false);
model.component('comp1').physics('emw').feature('pc2').set('Floquet_source', 'FromPeriodicPort');
model.component('comp1').physics('emw').feature('pc2').active(false);

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 3);
model.component('comp1').mesh('mesh1').feature('size').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size').set('hmax', '1.9600E-6');
model.component('comp1').mesh('mesh1').feature('size').set('hmin', '5.8800E-8');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 'mesh_a');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('cpf1').selection('source').set([27]);
model.component('comp1').mesh('mesh1').feature('cpf1').selection('destination').set([4]);
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('hmax', 'mesh_a');
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('edg1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('edg1').feature('size1').set('hmax', 'mesh_b');
model.component('comp1').mesh('mesh1').feature('edg1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftri3').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('ftri3').feature('size1').set('hmax', 'mesh_c');
model.component('comp1').mesh('mesh1').feature('ftri3').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hmax', 'mesh_d');
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftri4').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('ftri4').feature('size1').set('hmax', 'mesh_d');
model.component('comp1').mesh('mesh1').feature('ftri4').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('cpf2').selection('source').set([28]);
model.component('comp1').mesh('mesh1').feature('cpf2').selection('destination').set([7]);
model.component('comp1').mesh('mesh1').feature('ftet2').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('ftet2').feature('size1').set('hmax', 'mesh_d');
model.component('comp1').mesh('mesh1').feature('ftet2').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('swe1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('swe1').feature('size1').set('hmax', 'mesh_a');
model.component('comp1').mesh('mesh1').feature('swe1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').run;

model.component('comp1').physics('emw').feature('wee1').set('n_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee1').set('ki_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee2').set('n_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee2').set('ki_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee3').set('n_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee3').set('ki_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee4').set('n_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee4').set('ki_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee5').set('n_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee5').set('ki_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee6').set('n_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee6').set('ki_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee7').set('n_mat', 'userdef');
model.component('comp1').physics('emw').feature('wee7').set('ki_mat', 'userdef');

model.study.create('std1');
model.study('std1').create('param', 'Parametric');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').set('activate', {'emw' 'on'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol.create('sol2');
model.sol('sol2').study('std1');
model.sol('sol2').attach('std1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('p1', 'Parametric');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol.create('sol3');
model.sol('sol3').study('std1');
model.sol('sol3').label('Parametric Solutions 1');

model.batch.create('p1', 'Parametric');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').study('std1');

model.result.param.set('zp', '-1800e-9 [m]', 'Slice location');
model.result.param.set('fase', '0 [deg]', 'Phase');
model.result.dataset.create('surf1', 'Surface');
model.result.dataset.create('cpl1', 'CutPlane');
model.result.dataset.create('cpl2', 'CutPlane');
model.result.dataset.create('surf2', 'Surface');
model.result.dataset.create('surf3', 'Surface');
model.result.dataset('surf1').set('data', 'dset3');
model.result.dataset('surf1').selection.set([5 9 18 20 22 23 24 25]);
model.result.dataset('cpl1').set('data', 'dset3');
model.result.dataset('cpl2').set('data', 'dset3');
model.result.dataset('surf2').set('data', 'dset3');
model.result.dataset('surf2').selection.set([5 19]);
model.result.dataset('surf3').set('data', 'dset3');
model.result.dataset('surf3').selection.set([21]);
model.result.numerical.create('gev3', 'EvalGlobal');
model.result.numerical.create('av1', 'AvLine');
model.result.numerical('gev3').set('data', 'dset3');
model.result.numerical('gev3').set('probetag', 'none');
model.result.numerical('av1').set('data', 'dset3');
model.result.numerical('av1').selection.set([24 26]);
model.result.numerical('av1').set('probetag', 'none');

model.study('std1').feature('param').set('pname', {'landa'});
model.study('std1').feature('param').set('plistarr', {'7.80e-6'});
model.study('std1').feature('param').set('punit', {'m'});
model.study('std1').feature('freq').set('punit', 'Hz');
model.study('std1').feature('freq').set('plist', 'flanda');
model.study('std1').feature('freq').set('discretization', {'emw' 'physics'});

model.sol('sol2').attach('std1');
model.sol('sol2').feature('v1').set('clistctrl', {'p1'});
model.sol('sol2').feature('v1').set('cname', {'freq'});
model.sol('sol2').feature('v1').set('clist', {'flanda'});
model.sol('sol2').feature('s1').set('probesel', 'none');
model.sol('sol2').feature('s1').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol2').feature('s1').feature('dDef').set('ooc', false);
model.sol('sol2').feature('s1').feature('dDef').set('pardreorder', 'ndmt');
model.sol('sol2').feature('s1').feature('dDef').set('rhob', 400);
model.sol('sol2').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol2').feature('s1').feature('p1').set('control', 'user');
model.sol('sol2').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol2').feature('s1').feature('p1').set('plistarr', {'flanda'});
model.sol('sol2').feature('s1').feature('p1').set('punit', {''});
model.sol('sol2').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol2').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol2').runAll;

model.batch('p1').label('Parametric 1');
model.batch('p1').set('control', 'param');
model.batch('p1').set('pname', {'landa'});
model.batch('p1').set('plistarr', {'7.80e-6'});
model.batch('p1').set('punit', {'m'});
model.batch('p1').set('err', true);
model.batch('p1').feature('so1').set('seq', 'sol2');
model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').feature('so1').set('param', {'"landa","7.8E-6"'});
model.batch('p1').attach('std1');
model.batch('p1').run;

model.result.dataset('dset3').set('phase', 'fase');
model.result.dataset('cpl1').set('quickplane', 'zx');
model.result.dataset('cpl1').set('quicky', '20e-9');
model.result.dataset('cpl2').set('quickplane', 'xy');
model.result.dataset('cpl2').set('quickz', 'zp');
model.result.dataset('cpl2').set('spacevars', {'cpl1x' 'cpl1y'});
model.result.dataset('cpl2').set('normal', {'cpl1nx' 'cpl1ny' 'cpl1nz'});
model.result.numerical('gev3').set('table', 'tbl1');
model.result.numerical('gev3').set('expr', {'abs(emw.S11)^2'});
model.result.numerical('gev3').set('unit', {'1'});
model.result.numerical('gev3').set('descr', {'Ry_Bi2Te3 wedge'});
model.result.numerical('av1').set('table', 'tbl2');
model.result.numerical('av1').set('expr', {'z'});
model.result.numerical('av1').set('unit', {'m'});
model.result.numerical('av1').set('descr', {'z-coordinate'});
model.result.numerical('gev3').setResult;
model.result.numerical('av1').setResult;

model.label('Bi2Te3_VS_loop_z_offset_good.mph');

model.study('std1').feature('param').setIndex('plistarr', lam_range, 0);

model.batch('p1').run;

end
